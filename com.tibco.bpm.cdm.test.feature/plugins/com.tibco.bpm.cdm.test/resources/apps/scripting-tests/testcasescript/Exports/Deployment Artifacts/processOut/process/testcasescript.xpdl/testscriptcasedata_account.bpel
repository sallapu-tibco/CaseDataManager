<?xml version="1.0" encoding="UTF-8"?>
<bpws:process exitOnStandardFault="no" name="testscriptcasedata_account"
    suppressJoinFailure="yes" tibex:bxVersion="11.0.0"
    tibex:dataFieldDescriptorClass="com.example.testcasescript.testcasescript.testscriptcasedata_account"
    tibex:dataFieldDescriptorScript="process-js/testcasescript/testscriptcasedata_account/testscriptcasedata_account.js"
    tibex:explicitCompensation="yes"
    tibex:xpdlId="_fwOLgLnHEem7RYemWV-Nng"
    xmlns:bpws="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:tibex="http://www.tibco.com/bpel/2007/extensions" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <tibex:VariableDescriptor type="PersistentBatching">
        <task name="UpdateSingleAccount">
            <startingVariables>
                <variable>accountCaseUpdate</variable>
                <variable>accountBOMUpdate</variable>
            </startingVariables>
        </task>
        <task name="ScriptUpdateSingleAccount">
            <startingVariables>
                <variable>accountBOMUpdate</variable>
                <variable>accountCaseDefault</variable>
            </startingVariables>
        </task>
        <task name="CreateSingleAccount">
            <startingVariables>
                <variable>accountBOM</variable>
                <variable>accountCase</variable>
            </startingVariables>
        </task>
        <task name="DeleteSingleAccount">
            <startingVariables>
                <variable>accountCase</variable>
            </startingVariables>
        </task>
        <task name="DeleteUpdatedAccount">
            <startingVariables>
                <variable>accountCaseUpdate</variable>
            </startingVariables>
        </task>
        <task name="CreateMultipleAccounts">
            <startingVariables>
                <variable>accountBOMs</variable>
                <variable>accountCases</variable>
            </startingVariables>
        </task>
        <task name="ScriptupdateMultipleAccounts">
            <startingVariables>
                <variable>accountBOMsToUpdate</variable>
                <variable>accountCasesAfterUpdate</variable>
                <variable>accountCasesToUpdate</variable>
                <variable>accountCases</variable>
            </startingVariables>
        </task>
        <task name="ScriptCreateSingleAccountDefaultData">
            <startingVariables>
                <variable>accountCaseDefault</variable>
                <variable>accountBOMDefault</variable>
            </startingVariables>
        </task>
        <task name="ReadCases">
            <startingVariables>
                <variable>accountCasesSearchPaginated</variable>
                <variable>accountBOMRead</variable>
                <variable>accountCasesSearch</variable>
                <variable>accountBOMsRead</variable>
                <variable>accountCasesFindAll</variable>
                <variable>accountCasesFindByMultiCriteria</variable>
                <variable>accountCase</variable>
                <variable>accountCases</variable>
                <variable>accountCasesFindByCriteriaPaginated</variable>
                <variable>accountCasesFindByCriteria</variable>
            </startingVariables>
        </task>
        <task name="ScriptCreateMultiple">
            <startingVariables>
                <variable>accountBOMs</variable>
            </startingVariables>
        </task>
        <task name="ScriptDeleteSingleUpdatedAccount">
            <startingVariables>
                <variable>accountCasesFindAllAfterUpdatedDelete</variable>
            </startingVariables>
        </task>
        <task name="UpdateMultipleAccounts">
            <startingVariables>
                <variable>accountBOMsToUpdate</variable>
                <variable>accountCasesToUpdate</variable>
            </startingVariables>
        </task>
        <task name="CreateSingleAccountDefaultData">
            <startingVariables>
                <variable>accountCaseDefault</variable>
                <variable>accountBOMDefault</variable>
            </startingVariables>
        </task>
        <task name="ScriptReadUpdatedSingleCase">
            <startingVariables>
                <variable>accountCaseUpdate</variable>
                <variable>accountCaseDefault</variable>
            </startingVariables>
        </task>
        <task name="ScriptCreateSingleAccount">
            <startingVariables>
                <variable>accountBOM</variable>
            </startingVariables>
        </task>
        <task name="ScriptDeleteSingleAccount">
            <startingVariables>
                <variable>accountCasesFindAllAfterUpdateNDelete</variable>
            </startingVariables>
        </task>
    </tibex:VariableDescriptor>
    <bpws:documentation>*** Generated by TIBCO Business Studio.</bpws:documentation>
    <bpws:variables>
        <bpws:variable name="accountBOMs" tibex:array="yes"
            tibex:class="com.example.testcasedatascripting.Account" tibex:xpdlId="_fwOLkLnHEem7RYemWV-Nng"/>
        <bpws:variable name="accountBOM"
            tibex:class="com.example.testcasedatascripting.Account" tibex:xpdlId="_fwOLkbnHEem7RYemWV-Nng"/>
        <bpws:variable name="accountCase"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_fwOLkrnHEem7RYemWV-Nng"/>
        <bpws:variable name="accountCases" tibex:array="yes"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_fwOLk7nHEem7RYemWV-Nng"/>
        <bpws:variable name="accountBOMRead"
            tibex:class="com.example.testcasedatascripting.Account" tibex:xpdlId="_5UYwMLnxEem7RYemWV-Nng"/>
        <bpws:variable name="accountBOMsRead" tibex:array="yes"
            tibex:class="com.example.testcasedatascripting.Account" tibex:xpdlId="_9FFaoLnxEem7RYemWV-Nng"/>
        <bpws:variable name="accountCasesFindAll" tibex:array="yes"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_WhMzMLnzEem7RYemWV-Nng"/>
        <bpws:variable name="accountCasesFindByCriteria"
            tibex:array="yes"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_3ue3cLnzEem7RYemWV-Nng"/>
        <bpws:variable name="accountCasesSearch" tibex:array="yes"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_7UO2ILnzEem7RYemWV-Nng"/>
        <bpws:variable name="accountCasesFindByCriteriaPaginated"
            tibex:array="yes"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_FVLhMbn1Eem7RYemWV-Nng"/>
        <bpws:variable name="accountCasesFindByMultiCriteria"
            tibex:array="yes"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_H-gT4Ln1Eem7RYemWV-Nng"/>
        <bpws:variable name="accountCasesSearchPaginated"
            tibex:array="yes"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_Bfo9kLn2Eem7RYemWV-Nng"/>
        <bpws:variable name="accountCaseDefault"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_-GLjYL2jEemvpLtCK9nixA"/>
        <bpws:variable name="accountBOMDefault"
            tibex:class="com.example.testcasedatascripting.Account" tibex:xpdlId="_L-L1AL2kEemvpLtCK9nixA"/>
        <bpws:variable name="accountCaseUpdate"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_9cq24L2kEemvpLtCK9nixA"/>
        <bpws:variable name="accountBOMUpdate"
            tibex:class="com.example.testcasedatascripting.Account" tibex:xpdlId="_AcBj8L2lEemvpLtCK9nixA"/>
        <bpws:variable name="accountBOMsToUpdate" tibex:array="yes"
            tibex:class="com.example.testcasedatascripting.Account" tibex:xpdlId="_ZuInwL2tEemvpLtCK9nixA"/>
        <bpws:variable name="accountCasesToUpdate" tibex:array="yes"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_dJZNsL2tEemvpLtCK9nixA"/>
        <bpws:variable name="accountBOMsAfterUpdate" tibex:array="yes"
            tibex:class="com.example.testcasedatascripting.Account" tibex:xpdlId="_f9DoIL2tEemvpLtCK9nixA"/>
        <bpws:variable name="accountCasesAfterUpdate" tibex:array="yes"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_kPH6QL2tEemvpLtCK9nixA"/>
        <bpws:variable name="accountCasesFindAllAfterUpdateNDelete"
            tibex:array="yes"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_bQ7zEL20EemvpLtCK9nixA"/>
        <bpws:variable name="accountCasesFindAllAfterUpdatedDelete"
            tibex:array="yes"
            tibex:classRef="com.example.testcasedatascripting.Account" tibex:xpdlId="_kMh_ob21EemvpLtCK9nixA"/>
    </bpws:variables>
    <bpws:extensions>
        <bpws:extension mustUnderstand="yes" namespace="http://www.tibco.com/bpel/2007/extensions"/>
    </bpws:extensions>
    <bpws:eventHandlers/>
    <bpws:flow name="_BX_flow_cJh9QNZFEemLg4LTGyRnrQ">
        <bpws:links>
            <bpws:link
                name="_2-GtcL2jEemvpLtCK9nixA to _53lcAL2jEemvpLtCK9nixA" tibex:xpdlId="_53lcA72jEemvpLtCK9nixA"/>
            <bpws:link
                name="_53lcAL2jEemvpLtCK9nixA to ScriptUpdateSingleAccount" tibex:xpdlId="_b_1eQL2lEemvpLtCK9nixA"/>
            <bpws:link name="_CWyNML21EemvpLtCK9nixA to endEvent" tibex:xpdlId="_GVnaQL21EemvpLtCK9nixA"/>
            <bpws:link
                name="ScriptUpdateSingleAccount to UpdateSingleAccount" tibex:xpdlId="_LFRHoL2yEemvpLtCK9nixA"/>
            <bpws:link name="ReadCases to _2-GtcL2jEemvpLtCK9nixA" tibex:xpdlId="_2-Gtcb2jEemvpLtCK9nixA"/>
            <bpws:link
                name="ScriptupdateMultipleAccounts to UpdateMultipleAccounts" tibex:xpdlId="_Qk3bw7qwEemiap_fx2MOIQ"/>
            <bpws:link
                name="UpdateMultipleAccounts to DeleteSingleAccount" tibex:xpdlId="_YFNnwbqwEemiap_fx2MOIQ"/>
            <bpws:link
                name="ScriptDeleteSingleAccount to DeleteUpdatedAccount" tibex:xpdlId="_g_9fwLqxEemiap_fx2MOIQ"/>
            <bpws:link
                name="DeleteSingleAccount to ScriptDeleteSingleAccount" tibex:xpdlId="_IhOysL20EemvpLtCK9nixA"/>
            <bpws:link
                name="DeleteUpdatedAccount to _CWyNML21EemvpLtCK9nixA" tibex:xpdlId="_WEFeQL21EemvpLtCK9nixA"/>
            <bpws:link
                name="ScriptCreateMultiple to CreateMultipleAccounts" tibex:xpdlId="_fwOLj7nHEem7RYemWV-Nng"/>
            <bpws:link name="startEvent to ScriptCreateSingleAccount" tibex:xpdlId="_fwOLjrnHEem7RYemWV-Nng"/>
            <bpws:link
                name="ScriptCreateSingleAccount to CreateSingleAccount" tibex:xpdlId="_fwOLjbnHEem7RYemWV-Nng"/>
            <bpws:link
                name="CreateSingleAccount to ScriptCreateMultiple" tibex:xpdlId="_fwOLjLnHEem7RYemWV-Nng"/>
            <bpws:link name="CreateMultipleAccounts to ReadCases" tibex:xpdlId="_Gw8H0LnlEem7RYemWV-Nng"/>
            <bpws:link
                name="UpdateSingleAccount to ScriptReadUpdatedSingleCase" tibex:xpdlId="_yS2JIb2sEemvpLtCK9nixA"/>
            <bpws:link
                name="ScriptReadUpdatedSingleCase to ScriptupdateMultipleAccounts" tibex:xpdlId="_WhH5Mb2tEemvpLtCK9nixA"/>
        </bpws:links>
        <bpws:extensionActivity>
            <tibex:receiveEvent createInstance="yes" eventTimeout="0"
                name="startEvent" tibex:type="startEvent"
                tibex:xpdlId="_fwOLgbnHEem7RYemWV-Nng" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:sources>
                    <bpws:source linkName="startEvent to ScriptCreateSingleAccount"/>
                </bpws:sources>
                <tibex:eventSource>
                    <tibex:startEvent eventType="Default"/>
                </tibex:eventSource>
            </tibex:receiveEvent>
        </bpws:extensionActivity>
        <bpws:empty name="endEvent" tibex:migrationAllowed="yes"
            tibex:type="endEvent" tibex:xpdlId="_fwOLgrnHEem7RYemWV-Nng">
            <bpws:targets>
                <bpws:target linkName="_CWyNML21EemvpLtCK9nixA to endEvent"/>
            </bpws:targets>
        </bpws:empty>
        <bpws:extensionActivity>
            <tibex:extActivity name="ScriptCreateMultiple"
                tibex:migrationAllowed="yes" tibex:type="scriptTask"
                tibex:xpdlId="_fwOLg7nHEem7RYemWV-Nng" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="CreateSingleAccount to ScriptCreateMultiple"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="ScriptCreateMultiple to CreateMultipleAccounts"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[//first case
var account1 = factory.com_example_testcasedatascripting.createAccount();
account1.accountBalance = 0.12;
account1.accountInstitution = "Nutmeg";

//account1.accountOpened = new Date();
account1.accountOpened.setFullYear(1993);
account1.accountOpened.setMonth(0);
account1.accountOpened.setDate(1);
account1.accountOpened.setHours(1);
account1.accountOpened.setMinutes(1);
account1.accountOpened.setSeconds(1);
account1.accountOpened.setMilliseconds(100);

//account1.accountLastAccessed = new Date();"
account1.accountLastAccessed.setFullYear(2019);
account1.accountLastAccessed.setMonth(0);
account1.accountOpened.setDate(1);
account1.accountOpened.setHours(1);
account1.accountOpened.setMinutes(1);
account1.accountOpened.setSeconds(1);
account1.accountOpened.setMilliseconds(100);

account1.accountStatus = pkg.com_example_testcasedatascripting.AccountStatus.DORMANT;

account1.accountType = pkg.com_example_testdata_outside_global.AccountType.INVESTMENT;

account1.institutionAddress = factory.com_example_testcasedatascripting.createAddress();
account1.institutionAddress.firstLine = "case 2 line 1";
account1.institutionAddress.secondLine = "case 2 line 2";
account1.institutionAddress.city = "case 2 city 1";
account1.institutionAddress.county = "case 2 county 1";
account1.institutionAddress.country = "case 2 country 1";
account1.institutionAddress.postcode = "SN2 6AP";

//second case
var account2 = factory.com_example_testcasedatascripting.createAccount();
account2.accountBalance = 2000.56;
account2.accountInstitution = "Nationwide Building Society";
account2.accountOpened = new Date();
account2.accountOpened.setFullYear(1994);
account2.accountOpened.setMonth(0);
account2.accountOpened.setDate(1);
account2.accountOpened.setHours(1);
account2.accountOpened.setMinutes(1);
account2.accountOpened.setSeconds(1);
account2.accountOpened.setMilliseconds(100);
account2.accountLastAccessed = new Date();
account2.accountLastAccessed.setFullYear(2020);
account2.accountLastAccessed.setMonth(0);
account2.accountOpened.setDate(1);
account2.accountOpened.setHours(1);
account2.accountOpened.setMinutes(1);
account2.accountOpened.setSeconds(1);
account2.accountOpened.setMilliseconds(100);

account2.accountStatus = pkg.com_example_testcasedatascripting.AccountStatus.DORMANT;

account2.accountType = pkg.com_example_testdata_outside_global.AccountType.FIXEDDEPOSIT;

account2.institutionAddress = factory.com_example_testcasedatascripting.createAddress();
account2.institutionAddress.firstLine = "case 3 line 1";
account2.institutionAddress.secondLine = "case 3 line 2";
account2.institutionAddress.city = "case 3 city 1";
account2.institutionAddress.county = "case 3 county 1";
account2.institutionAddress.country = "case 3 country 1";
account2.institutionAddress.postcode = "SN3 7AP";

data.accountBOMs.push(account1, account2);

//create account cases
//data.accountCases = bpm.caseData.createAll(data.accountBOMs,'com.example.testcasedatascripting.Account');]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="CreateSingleAccount"
                tibex:migrationAllowed="yes" tibex:type="serviceTask"
                tibex:xpdlId="_fwOLhLnHEem7RYemWV-Nng" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="ScriptCreateSingleAccount to CreateSingleAccount"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="CreateSingleAccount to ScriptCreateMultiple"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[data.accountCase = bpm.caseData.create(data.accountBOM,'com.example.testcasedatascripting.Account');]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="ScriptCreateSingleAccount"
                tibex:migrationAllowed="yes" tibex:type="scriptTask"
                tibex:xpdlId="_fwOLh7nHEem7RYemWV-Nng" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="startEvent to ScriptCreateSingleAccount"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="ScriptCreateSingleAccount to CreateSingleAccount"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[//setting data for first account case
data.accountBOM = factory.com_example_testcasedatascripting.createAccount();
data.accountBOM.accountBalance = 100.12;
data.accountBOM.accountInstitution = "HSBC Bank Plc";

//data.accountBOM.accountOpened = new Date().now();
//data.accountBOM.accountOpened = new Date('1992-01-01');
//Temporarily commented - ACE-2330
//data.accountBOM.accountOpened = new Date();
data.accountBOM.accountOpened.setFullYear(1992);
data.accountBOM.accountOpened.setMonth(0);
data.accountBOM.accountOpened.setDate(1);
data.accountBOM.accountOpened.setHours(1);
data.accountBOM.accountOpened.setMinutes(1);
data.accountBOM.accountOpened.setSeconds(1);
data.accountBOM.accountOpened.setMilliseconds(100);

//Temporarily commented - ACE-2330
//data.accountBOM.accountLastAccessed = new Date();
data.accountBOM.accountLastAccessed.setFullYear(2018);
data.accountBOM.accountLastAccessed.setMonth(0);
data.accountBOM.accountOpened.setDate(1);
data.accountBOM.accountOpened.setHours(1);
data.accountBOM.accountOpened.setMinutes(1);
data.accountBOM.accountOpened.setSeconds(1);
data.accountBOM.accountOpened.setMilliseconds(100);

data.accountBOM.accountStatus = pkg.com_example_testcasedatascripting.AccountStatus.ACTIVE;

data.accountBOM.accountType = pkg.com_example_testdata_outside_global.AccountType.SAVINGS;

data.accountBOM.institutionAddress = factory.com_example_testcasedatascripting.createAddress();
data.accountBOM.institutionAddress.firstLine = "case 1 line 1";
data.accountBOM.institutionAddress.secondLine = "case 1 line 2";
data.accountBOM.institutionAddress.city = "case 1 city 1";
data.accountBOM.institutionAddress.county = "case 1 county 1";
data.accountBOM.institutionAddress.country = "case 1 country 1";
data.accountBOM.institutionAddress.postcode = "SN1 5AP";


//create account case
//data.accountCase = bpm.caseData.create(data.accountBOM,'com.example.testcasedatascripting.Account');]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="CreateMultipleAccounts"
                tibex:migrationAllowed="yes" tibex:type="serviceTask"
                tibex:xpdlId="_fwOLiLnHEem7RYemWV-Nng" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="ScriptCreateMultiple to CreateMultipleAccounts"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="CreateMultipleAccounts to ReadCases"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[data.accountCases.length=0;data.accountCases.pushAll(bpm.caseData.createAll(data.accountBOMs,'com.example.testcasedatascripting.Account'));]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="ReadCases"
                tibex:migrationAllowed="yes" tibex:type="scriptTask"
                tibex:xpdlId="_Gw7gwLnlEem7RYemWV-Nng" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="CreateMultipleAccounts to ReadCases"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="ReadCases to _2-GtcL2jEemvpLtCK9nixA"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[//read single case
data.accountBOMRead = bpm.caseData.read(data.accountCase);

//read multiple cases
var lengthAll;
data.accountBOMsRead.pushAll(bpm.caseData.readAll(data.accountCases));
lengthAll = data.accountBOMsRead.length; //2

//find by CID
//0th case reference
var accountBOMFindByCID = factory.com_example_testcasedatascripting.createAccount();
var findByCID = bpm.caseData.findByCaseIdentifier('Account00001','com.example.testcasedatascripting.Account');
accountBOMFindByCID = bpm.caseData.read(findByCID);

//find all
var accountBOMFindAll0 = factory.com_example_testcasedatascripting.createAccount();
var accountBOMFindAll1 = factory.com_example_testcasedatascripting.createAccount();
var accountBOMFindAll2 = factory.com_example_testcasedatascripting.createAccount();
data.accountCasesFindAll.length=0;
data.accountCasesFindAll.pushAll(bpm.caseData.findAll('com.example.testcasedatascripting.Account', 0, 3));
var lengthFindAll = data.accountCasesFindAll.length; //3
accountBOMFindAll0 = bpm.caseData.read(data.accountCasesFindAll[0]);
accountBOMFindAll1 = bpm.caseData.read(data.accountCasesFindAll[1]);
accountBOMFindAll2 = bpm.caseData.read(data.accountCasesFindAll[2]);

//find by criteria
var accountBOMFindByCriteria0 = factory.com_example_testcasedatascripting.createAccount();
var accountBOMFindByCriteria1 = factory.com_example_testcasedatascripting.createAccount();
data.accountCasesFindByCriteria.length=0;
data.accountCasesFindByCriteria.pushAll(bpm.caseData.findByCriteria("accountLastAccessed = 2019-01-01T00:01:01.100Z",'com.example.testcasedatascripting.Account',0,5));
var lengthFindByCriteria = data.accountCasesFindByCriteria.length; //2
accountBOMFindByCriteria0 = bpm.caseData.read(data.accountCasesFindByCriteria[0]);
accountBOMFindByCriteria1 = bpm.caseData.read(data.accountCasesFindByCriteria[1]);

//find by criteria - paginated
var accountBOMFindByCriteriaPaginated0 = factory.com_example_testcasedatascripting.createAccount();
data.accountCasesFindByCriteriaPaginated.length=0;
data.accountCasesFindByCriteriaPaginated.pushAll(bpm.caseData.findByCriteria("accountLastAccessed = 2019-01-01T00:01:01.100Z",'com.example.testcasedatascripting.Account',1,1));
var lengthFindByCriteriaPaginated = data.accountCasesFindByCriteriaPaginated.length; //1
accountBOMFindByCriteriaPaginated0 = bpm.caseData.read(data.accountCasesFindByCriteriaPaginated[0]);

//find by criteria - multiple criteria
var accountBOMFindByMultiCriteria = factory.com_example_testcasedatascripting.createAccount();
data.accountCasesFindByMultiCriteria.length=0;
data.accountCasesFindByMultiCriteria.pushAll(bpm.caseData.findByCriteria("accountLastAccessed = 2019-01-01T00:01:01.100Z and accountInstitution = 'Nutmeg'",'com.example.testcasedatascripting.Account',0,1));
var lengthFindByMultiCriteria = data.accountCasesFindByMultiCriteria.length; //1
accountBOMFindByMultiCriteria = bpm.caseData.read(data.accountCasesFindByMultiCriteria[0]);

//search
var accountBOMSearch = factory.com_example_testcasedatascripting.createAccount();
data.accountCasesSearch.length=0;
data.accountCasesSearch.pushAll(bpm.caseData.findBySimpleSearch("100.12",'com.example.testcasedatascripting.Account',0,2));
var lengthSearch = data.accountCasesSearch.length; //1
accountBOMSearch = bpm.caseData.read(data.accountCasesSearch[0]);

//search - paginated
var accountBOMSearchPaginated = factory.com_example_testcasedatascripting.createAccount();
data.accountCasesSearchPaginated.length=0;
data.accountCasesSearchPaginated.pushAll(bpm.caseData.findBySimpleSearch("'DORMANT'",'com.example.testcasedatascripting.Account',1,1));
var lengthSearchPaginated = data.accountCasesSearchPaginated.length; //1
accountBOMSearchPaginated = bpm.caseData.read(data.accountCasesSearchPaginated[0]);]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="ScriptUpdateSingleAccount"
                tibex:migrationAllowed="yes" tibex:type="scriptTask"
                tibex:xpdlId="_FFQaULqvEemiap_fx2MOIQ" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="_53lcAL2jEemvpLtCK9nixA to ScriptUpdateSingleAccount"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="ScriptUpdateSingleAccount to UpdateSingleAccount"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[//setting data for first account case
data.accountBOMUpdate = bpm.caseData.read(data.accountCaseDefault);
//data.accountBOMUpdate.accountId = 'Account00004';
data.accountBOMUpdate.accountBalance = 3456.67;
data.accountBOMUpdate.accountInstitution = 'Metro Bank';
//data.accountBOM.accountOpened = new Date().now();
//data.accountBOM.accountOpened = new Date('1992-01-01');
//Temporarily commented - ACE-2330
//data.accountBOM.accountOpened = new Date();
data.accountBOMUpdate.accountOpened.setFullYear(2001);
data.accountBOMUpdate.accountOpened.setMonth(2);
data.accountBOMUpdate.accountOpened.setDate(2);
data.accountBOMUpdate.accountOpened.setHours(2);
data.accountBOMUpdate.accountOpened.setMinutes(2);
data.accountBOMUpdate.accountOpened.setSeconds(2);
data.accountBOMUpdate.accountOpened.setMilliseconds(200);
//Temporarily commented - ACE-2330
//data.accountBOM.accountLastAccessed = new Date();
data.accountBOMUpdate.accountLastAccessed.setFullYear(2019);
data.accountBOMUpdate.accountLastAccessed.setMonth(3);
data.accountBOMUpdate.accountOpened.setDate(3);
data.accountBOMUpdate.accountOpened.setHours(3);
data.accountBOMUpdate.accountOpened.setMinutes(3);
data.accountBOMUpdate.accountOpened.setSeconds(3);
data.accountBOMUpdate.accountOpened.setMilliseconds(300);
data.accountBOMUpdate.accountStatus = pkg.com_example_testcasedatascripting.AccountStatus.BARRED;
data.accountBOMUpdate.accountType = pkg.com_example_testdata_outside_global.AccountType.INVESTMENT;
data.accountBOMUpdate.institutionAddress = factory.com_example_testcasedatascripting.createAddress();
data.accountBOMUpdate.institutionAddress.firstLine = "case 4 update 1 line 1";
data.accountBOMUpdate.institutionAddress.secondLine = "case 4 update 1 line 2";
data.accountBOMUpdate.institutionAddress.city = "case 4 update 1 city 1";
data.accountBOMUpdate.institutionAddress.county = "case 4 update 1 county 1";
data.accountBOMUpdate.institutionAddress.country = "case 4 update 1 country 1";
data.accountBOMUpdate.institutionAddress.postcode = "SN10 11UP";
//update account case
//data.accountCaseUpdate = bpm.caseData.updateByRef(data.accountCaseDefault, data.accountBOMUpdate);]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="UpdateSingleAccount"
                tibex:migrationAllowed="yes" tibex:type="serviceTask"
                tibex:xpdlId="_oRHEELqvEemiap_fx2MOIQ" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="ScriptUpdateSingleAccount to UpdateSingleAccount"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="UpdateSingleAccount to ScriptReadUpdatedSingleCase"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[data.accountCaseUpdate = bpm.caseData.updateByRef(data.accountCaseUpdate,data.accountBOMUpdate);]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="ScriptupdateMultipleAccounts"
                tibex:migrationAllowed="yes" tibex:type="scriptTask"
                tibex:xpdlId="_LICmsLqwEemiap_fx2MOIQ" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="ScriptReadUpdatedSingleCase to ScriptupdateMultipleAccounts"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="ScriptupdateMultipleAccounts to UpdateMultipleAccounts"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[data.accountCasesToUpdate.pushAll(data.accountCases);
var accountBOMToUpdateArray = new Array();
//accountBOMToUpdateArray = bpm.scriptUtil.copyAll(bpm.caseData.readAll(data.accountCases));
//read casedata of 1st
var accountBOMToUpdate1 = factory.com_example_testcasedatascripting.createAccount();
accountBOMToUpdate1 = accountBOMToUpdateArray[0];
//read casedata of 2nd
var accountBOMToUpdate2 = factory.com_example_testcasedatascripting.createAccount();
accountBOMToUpdate2 = accountBOMToUpdateArray[1];
//manipulate the bom of 1st
accountBOMToUpdate1.accountBalance = 1234.56;
accountBOMToUpdate1.accountInstitution = 'Nutmeg Inc.';
//accountBOMToUpdate1.accountOpened = new Date();
accountBOMToUpdate1.accountOpened.setFullYear(1992);
accountBOMToUpdate1.accountOpened.setMonth(0);
accountBOMToUpdate1.accountOpened.setDate(1);
accountBOMToUpdate1.accountOpened.setHours(1);
accountBOMToUpdate1.accountOpened.setMinutes(1);
accountBOMToUpdate1.accountOpened.setSeconds(1);
accountBOMToUpdate1.accountOpened.setMilliseconds(300);
//accountBOMToUpdate1.accountLastAccessed = new Date();"
accountBOMToUpdate1.accountLastAccessed.setFullYear(2018);
accountBOMToUpdate1.accountLastAccessed.setMonth(2);
accountBOMToUpdate1.accountOpened.setDate(2);
accountBOMToUpdate1.accountOpened.setHours(2);
accountBOMToUpdate1.accountOpened.setMinutes(2);
accountBOMToUpdate1.accountOpened.setSeconds(2);
accountBOMToUpdate1.accountOpened.setMilliseconds(200);
accountBOMToUpdate1.accountStatus = pkg.com_example_testcasedatascripting.AccountStatus.TOBETERMINATED;
accountBOMToUpdate1.accountType = pkg.com_example_testdata_outside_global.AccountType.INVESTMENT;
accountBOMToUpdate1.institutionAddress.firstLine = "case 2 update 1 line 1";
accountBOMToUpdate1.institutionAddress.secondLine = "case 2 update 1 line 2";
accountBOMToUpdate1.institutionAddress.city = "case 2 update 1 city 1";
accountBOMToUpdate1.institutionAddress.county = "case 2 update 1 county 1";
accountBOMToUpdate1.institutionAddress.country = "case 2 update 1 country 1";
accountBOMToUpdate1.institutionAddress.postcode = "SN2 6UP";
//manipulate the bom of 2nd
accountBOMToUpdate2.accountBalance = 2000.66;
accountBOMToUpdate2.accountInstitution = "Nationwide Building Society (NBS)";
accountBOMToUpdate2.accountOpened = new Date();
accountBOMToUpdate2.accountOpened.setFullYear(1993);
accountBOMToUpdate2.accountOpened.setMonth(0);
accountBOMToUpdate2.accountOpened.setDate(1);
accountBOMToUpdate2.accountOpened.setHours(1);
accountBOMToUpdate2.accountOpened.setMinutes(1);
accountBOMToUpdate2.accountOpened.setSeconds(1);
accountBOMToUpdate2.accountOpened.setMilliseconds(100);
accountBOMToUpdate2.accountLastAccessed = new Date();
accountBOMToUpdate2.accountLastAccessed.setFullYear(2020);
accountBOMToUpdate2.accountLastAccessed.setMonth(10);
accountBOMToUpdate2.accountOpened.setDate(1);
accountBOMToUpdate2.accountOpened.setHours(1);
accountBOMToUpdate2.accountOpened.setMinutes(1);
accountBOMToUpdate2.accountOpened.setSeconds(1);
accountBOMToUpdate2.accountOpened.setMilliseconds(100);
accountBOMToUpdate2.accountStatus = pkg.com_example_testcasedatascripting.AccountStatus.ACTIVE;
accountBOMToUpdate2.accountType = pkg.com_example_testdata_outside_global.AccountType.SAVINGS;
accountBOMToUpdate2.institutionAddress.firstLine = "case 3 update 1 line 1";
accountBOMToUpdate2.institutionAddress.secondLine = "case 3 update 1 line 2";
accountBOMToUpdate2.institutionAddress.city = "case 3 update 1 city 1";
accountBOMToUpdate2.institutionAddress.county = "case 3 update 1 county 1";
accountBOMToUpdate2.institutionAddress.country = "case 3 update 1 country 1";
accountBOMToUpdate2.institutionAddress.postcode = "SN3 7UP";
//put the boms into an array of boms
data.accountBOMsToUpdate.length = 0;
data.accountBOMsToUpdate.push(accountBOMToUpdate1);
data.accountBOMsToUpdate.push(accountBOMToUpdate2);
//update account cases
//data.accountCasesAfterUpdate.pushAll(bpm.caseData.updateAllByRef(data.accountCasesToUpdate, data.accountBOMsToUpdate));
//read case data after update 1
var accountBOMAfterUpdate1 = factory.com_example_testcasedatascripting.createAccount();
accountBOMAfterUpdate1 = bpm.caseData.read(data.accountCasesAfterUpdate[0]);
//read case data after update 2
var accountBOMAfterUpdate2 = factory.com_example_testcasedatascripting.createAccount();
accountBOMAfterUpdate2 = bpm.caseData.read(data.accountCasesAfterUpdate[1]);
]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="UpdateMultipleAccounts"
                tibex:migrationAllowed="yes" tibex:type="serviceTask"
                tibex:xpdlId="_Qk3bwLqwEemiap_fx2MOIQ" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="ScriptupdateMultipleAccounts to UpdateMultipleAccounts"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="UpdateMultipleAccounts to DeleteSingleAccount"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[bpm.caseData.updateAllByRef(data.accountCasesToUpdate,data.accountBOMsToUpdate);]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="ScriptDeleteSingleAccount"
                tibex:migrationAllowed="yes" tibex:type="scriptTask"
                tibex:xpdlId="_YFNnwLqwEemiap_fx2MOIQ" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="DeleteSingleAccount to ScriptDeleteSingleAccount"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="ScriptDeleteSingleAccount to DeleteUpdatedAccount"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[//delete non-updated account
//bpm.caseData.deleteByRef(data.accountCase);
//find all
var accountBOMFindAllAfterUpdateNDelete0 = factory.com_example_testcasedatascripting.createAccount();
var accountBOMFindAllAfterUpdateNDelete1 = factory.com_example_testcasedatascripting.createAccount();
var accountBOMFindAllAfterUpdateNDelete2 = factory.com_example_testcasedatascripting.createAccount();
data.accountCasesFindAllAfterUpdateNDelete.length=0;
data.accountCasesFindAllAfterUpdateNDelete.pushAll(bpm.caseData.findAll('com.example.testcasedatascripting.Account', 0, 4));
var lengthFindAllUpdateNDelete = data.accountCasesFindAllAfterUpdateNDelete.length; //3
accountBOMFindAllAfterUpdateNDelete0 = bpm.caseData.read(data.accountCasesFindAllAfterUpdateNDelete[0]);
accountBOMFindAllAfterUpdateNDelete1 = bpm.caseData.read(data.accountCasesFindAllAfterUpdateNDelete[1]);
accountBOMFindAllAfterUpdateNDelete2 = bpm.caseData.read(data.accountCasesFindAllAfterUpdateNDelete[2]);]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="DeleteSingleAccount"
                tibex:migrationAllowed="yes" tibex:type="serviceTask"
                tibex:xpdlId="_YjMkQLqwEemiap_fx2MOIQ" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="UpdateMultipleAccounts to DeleteSingleAccount"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="DeleteSingleAccount to ScriptDeleteSingleAccount"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[bpm.process.checkIfSafeToDeleteCase(data.accountCase);
bpm.caseData.deleteByRef(data.accountCase);]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity
                name="ScriptCreateSingleAccountDefaultData"
                tibex:migrationAllowed="yes" tibex:type="scriptTask"
                tibex:xpdlId="_2-GtcL2jEemvpLtCK9nixA" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="ReadCases to _2-GtcL2jEemvpLtCK9nixA"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="_2-GtcL2jEemvpLtCK9nixA to _53lcAL2jEemvpLtCK9nixA"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[data.accountBOMDefault = factory.com_example_testcasedatascripting.createAccount();
var institutionAddressAccount = factory.com_example_testcasedatascripting.createAddress();
data.accountBOMDefault.institutionAddress = institutionAddressAccount;
//data.accountCaseDefault = bpm.caseData.create(data.accountBOMDefault,'com.example.testcasedatascripting.Account');
var accountReadDefault = factory.com_example_testcasedatascripting.createAccount();
accountReadDefault = bpm.caseData.read(data.accountCaseDefault);
//create account case with default data
//data.accountCaseDefault = bpm.caseData.create(data.accountBOMDefault,'com.example.testcasedatascripting.Account');]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="CreateSingleAccountDefaultData"
                tibex:migrationAllowed="yes" tibex:type="serviceTask"
                tibex:xpdlId="_53lcAL2jEemvpLtCK9nixA" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="_2-GtcL2jEemvpLtCK9nixA to _53lcAL2jEemvpLtCK9nixA"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="_53lcAL2jEemvpLtCK9nixA to ScriptUpdateSingleAccount"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[data.accountCaseDefault = bpm.caseData.create(data.accountBOMDefault,'com.example.testcasedatascripting.Account');]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="ScriptReadUpdatedSingleCase"
                tibex:migrationAllowed="yes" tibex:type="scriptTask"
                tibex:xpdlId="_yS2JIL2sEemvpLtCK9nixA" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="UpdateSingleAccount to ScriptReadUpdatedSingleCase"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="ScriptReadUpdatedSingleCase to ScriptupdateMultipleAccounts"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[var accountReadDefaultUpdated = factory.com_example_testcasedatascripting.createAccount();
accountReadDefaultUpdated = bpm.caseData.read(data.accountCaseUpdate);
var accountReadDefaultOlder = factory.com_example_testcasedatascripting.createAccount();
accountReadDefaultOlder = bpm.caseData.read(data.accountCaseDefault);]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="DeleteUpdatedAccount"
                tibex:migrationAllowed="yes" tibex:type="serviceTask"
                tibex:xpdlId="__MO8wL20EemvpLtCK9nixA" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="ScriptDeleteSingleAccount to DeleteUpdatedAccount"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="DeleteUpdatedAccount to _CWyNML21EemvpLtCK9nixA"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[bpm.process.checkIfSafeToDeleteCase(data.accountCaseUpdate);
bpm.caseData.deleteByRef(data.accountCaseUpdate);]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
        <bpws:extensionActivity>
            <tibex:extActivity name="ScriptDeleteSingleUpdatedAccount"
                tibex:migrationAllowed="yes" tibex:type="scriptTask"
                tibex:xpdlId="_CWyNML21EemvpLtCK9nixA" xmlns:tibex="http://www.tibco.com/bpel/2007/extensions">
                <bpws:targets>
                    <bpws:target linkName="DeleteUpdatedAccount to _CWyNML21EemvpLtCK9nixA"/>
                </bpws:targets>
                <bpws:sources>
                    <bpws:source linkName="_CWyNML21EemvpLtCK9nixA to endEvent"/>
                </bpws:sources>
                <tibex:script expressionLanguage="urn:tibco:wsbpel:2.0:sublang:javascript"><![CDATA[//delete updated account
//bpm.caseData.deleteByRef(data.accountCaseUpdate);
//find all
var accountBOMFindAllAfterUpdatedDelete0 = factory.com_example_testcasedatascripting.createAccount();
var accountBOMFindAllAfterUpdatedDelete1 = factory.com_example_testcasedatascripting.createAccount();
data.accountCasesFindAllAfterUpdatedDelete.length=0;
data.accountCasesFindAllAfterUpdatedDelete.pushAll(bpm.caseData.findAll('com.example.testcasedatascripting.Account', 0, 10));
var lengthFindAllUpdatedDelete = data.accountCasesFindAllAfterUpdatedDelete.length; //2
accountBOMFindAllAfterUpdatedDelete0 = bpm.caseData.read(data.accountCasesFindAllAfterUpdatedDelete[0]);
accountBOMFindAllAfterUpdatedDelete1 = bpm.caseData.read(data.accountCasesFindAllAfterUpdatedDelete[1]);]]></tibex:script>
            </tibex:extActivity>
        </bpws:extensionActivity>
    </bpws:flow>
</bpws:process>
